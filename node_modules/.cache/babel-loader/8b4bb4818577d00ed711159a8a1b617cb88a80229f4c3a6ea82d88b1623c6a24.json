{"ast":null,"code":"import api from '../utils/api';\nimport { userActionss } from '../reducer/userReducer';\nconst loginWithToken = () => async dispatch => {\n  try {\n    const response = await api.get('/user/getToken');\n    console.log(response, 'response!!!');\n    if (response.status !== 200) throw new Error(response.error);\n    dispatch(userActionss.loginTokenSuccess(response.data));\n  } catch (error) {\n    dispatch(userActionss.loginWithTokenFail(error));\n  }\n};\nconst loginWithEmail = ({\n  email,\n  password\n}) => async dispatch => {\n  try {\n    dispatch(userActionss.loginRequest());\n    sessionStorage.removeItem(\"token\");\n    const res = await api.post('/auth/login', {\n      email,\n      password\n    });\n    if (res.status !== 200) throw new Error(res.error);\n    sessionStorage.setItem(\"token\", res.data.token);\n    dispatch(userActionss.loginSuccess(res.data));\n  } catch (error) {\n    dispatch(userActionss.loginFail(error.error));\n  }\n};\nconst logout = () => async dispatch => {\n  sessionStorage.removeItem('token');\n  dispatch(userActionss.logout());\n};\nconst registerUser = ({\n  email,\n  name,\n  season,\n  password,\n  level\n}, navigate) => async dispatch => {\n  try {\n    dispatch(userActionss.registerUserRequest());\n    const res = await api.post('/user', {\n      email,\n      name,\n      season: season ? season : 'normal',\n      password,\n      level\n    });\n    console.log(res, 'resres!!!!');\n    if (res.status !== 200) throw new Error(res.error);\n    dispatch(userActionss.registerUserSuccess());\n  } catch (error) {\n    dispatch(userActionss.registerUserFail(error.error));\n    navigate('/login');\n  }\n};\nconst adminShowAll = () => async dispatch => {\n  try {\n    const res = await api.get('/reading/adminR');\n  } catch (error) {\n    dispatch(userActionss.registerUserFail(error.error));\n  }\n};\nexport const userActions = {\n  loginWithToken,\n  loginWithEmail,\n  logout,\n  registerUser\n};","map":{"version":3,"names":["api","userActionss","loginWithToken","dispatch","response","get","console","log","status","Error","error","loginTokenSuccess","data","loginWithTokenFail","loginWithEmail","email","password","loginRequest","sessionStorage","removeItem","res","post","setItem","token","loginSuccess","loginFail","logout","registerUser","name","season","level","navigate","registerUserRequest","registerUserSuccess","registerUserFail","adminShowAll","userActions"],"sources":["/Users/jiylee/Desktop/Code/church/church_bible/churchBible/src/action/userAction.js"],"sourcesContent":["import api from '../utils/api'\nimport { userActionss } from '../reducer/userReducer'\n\nconst loginWithToken =()=> async (dispatch)=>{\n  try{\n   \n    const response = await api.get('/user/getToken')\n    console.log(response,'response!!!')\n    if(response.status !==200)throw new Error(response.error)\n    dispatch(userActionss.loginTokenSuccess(response.data))\n  }catch(error){\n    dispatch(userActionss.loginWithTokenFail(error))\n  }\n}\n\nconst loginWithEmail=({email,password})=>async (dispatch)=>{\n  try{\n    dispatch(userActionss.loginRequest())\n    sessionStorage.removeItem(\"token\");\n    const res = await api.post('/auth/login',{email,password});\n    if(res.status !==200)throw new Error(res.error);\n    sessionStorage.setItem(\"token\",res.data.token)\n    dispatch(userActionss.loginSuccess(res.data))\n  }catch(error){\n    dispatch(userActionss.loginFail(error.error))\n  }\n}\n\nconst logout =()=> async (dispatch)=>{\n  sessionStorage.removeItem('token')\n  dispatch(userActionss.logout())\n}\n\nconst registerUser =\n({email,name,season,password,level},navigate)=> async (dispatch)=>{\n  try{\n    dispatch(userActionss.registerUserRequest())\n    const res = await api.post('/user',{email,name,season:season?season:'normal',password,level})\n    console.log(res,'resres!!!!')\n    if(res.status !== 200)throw new Error(res.error)\n    dispatch(userActionss.registerUserSuccess())\n  }catch(error){\n    dispatch(userActionss.registerUserFail(error.error))\n    navigate('/login')\n  }\n\n}\nconst adminShowAll=()=>async (dispatch)=>{\n  try{\n    const res = await api.get('/reading/adminR')\n    \n\n  }catch(error){\n    dispatch(userActionss.registerUserFail(error.error))\n  }\n}\n\nexport const userActions = {\n  loginWithToken,\n  loginWithEmail,\n  logout,\n  registerUser,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}